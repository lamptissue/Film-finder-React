import React, { useState, useEffect } from "react";
import axios from "axios";
import {
  Container,
  ProfileContainer,
  H2,
  H3,
  StyledInput,
  Form,
  StyledLabel,
  StyledButton,
  P,
  ProfileUser,
} from "./style";

function Profile() {
  const [favouriteFilms, setFilms] = useState([]);
  const [updatedPassword, setUpdatedPassword] = useState("");
  const [updatedName, setUpdatedName] = useState("");
  const [updatedEmail, setUpdatedEmail] = useState("");
  const token = localStorage.getItem("token");
  const user = JSON.parse(localStorage.getItem("user")) || {};

  useEffect(() => {
    axios
      .get(`https://repulsive-crab-hem.cyclic.app/api/users/${user.username}`, {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      })
      .then((response) => {
        const userData = response.data.data.user;
        console.log("This is the response:", response);
        setFilms(userData.favouriteFilms);
        setUpdatedPassword(userData.password);
        setUpdatedName(userData.name);
        setUpdatedEmail(userData.email);
      })
      .catch((error) => {
        console.error("Error fetching user data:", error);
      });
  }, []);

  const handleFormSubmit = (e) => {
    e.preventDefault();

    const updatedUserData = {
      name: updatedName,
      password: updatedPassword,
      email: updatedEmail,
    };

    if (updatedUserData.name === "") {
      delete updatedUserData.name;
    }
    if (updatedUserData.password === "") {
      delete updatedUserData.password;
    }
    if (updatedUserData.email === "") {
      delete updatedUserData.email;
    }
    axios
      .patch(`https://repulsive-crab-hem.cyclic.app/api/users/${user.username}`, updatedUserData, {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      })
      .then((response) => {
        console.log(response);
        window.confirm("Details have been updated!");
        setUpdatedName("");
        setUpdatedPassword("");
        setUpdatedEmail("");
      })
      .catch((error) => {
        console.error("Error updating user data:", error);
        // Handle error, show an error message
      });
  };

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    if (name === "name") {
      setUpdatedName(value);
    } else if (name === "password") {
      setUpdatedPassword(value);
    } else if (name === "email") {
      setUpdatedEmail(value);
    }
  };

  const isButtonDisabled = !updatedName && !updatedPassword && !updatedEmail;

  return (
    <Container>
      <ProfileContainer>
        <H2>Profile Details</H2>
        <H3>Want to update your profile?</H3>
        <P>
          Profile: <ProfileUser> {user.username}</ProfileUser>
        </P>
        <Form onSubmit={handleFormSubmit}>
          <StyledLabel for='name'>Update name:</StyledLabel>
          <StyledInput type='text' placeholder='name' name='name' value={updatedName} onChange={handleInputChange} />

          <StyledLabel for='password'>Update password:</StyledLabel>
          <StyledInput
            type='password'
            placeholder='password'
            name='password'
            value={updatedPassword}
            onChange={handleInputChange}
          />

          <StyledLabel for='name'>Update email:</StyledLabel>
          <StyledInput type='text' placeholder='email' name='email' value={updatedEmail} onChange={handleInputChange} />

          <StyledButton type='submit' disabled={isButtonDisabled}>
            Update Profile
          </StyledButton>
        </Form>
      </ProfileContainer>

      <ProfileContainer>
        <H2>Favourite Films</H2>

        {favouriteFilms.length > 0 ? (
          <ul>
            {favouriteFilms.map((film) => (
              <li key={film._id}>
                {film.Title}
                <button onClick={() => handleRemoveFromFavorites(film._id)}>Remove</button>
              </li>
            ))}
          </ul>
        ) : (
          <H3>No films have been saved :(</H3>
        )}
      </ProfileContainer>
    </Container>
  );
}

export default Profile;
